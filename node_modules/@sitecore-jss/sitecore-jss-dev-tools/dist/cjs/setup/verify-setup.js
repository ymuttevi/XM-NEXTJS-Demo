"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.verifySetup = void 0;
const chalk_1 = __importDefault(require("chalk"));
const fs_1 = __importDefault(require("fs"));
const readline_sync_1 = __importDefault(require("readline-sync"));
const setup_1 = require("./setup");
const verifySetup = () => {
    if (!fs_1.default.existsSync(setup_1.userConfigPath)) {
        console.warn(chalk_1.default.yellow('No Sitecore connection has been configured (missing scjssconfig.json)'));
        const runSetup = readline_sync_1.default.keyInYN('This command requires a Sitecore connection. Would you like to configure the connection?');
        if (!runSetup) {
            throw 'This command cannot execute without a Sitecore connection';
        }
        setup_1.setup(true);
        console.warn(chalk_1.default.yellow('JSS app configuration must be deployed to Sitecore before continuing.'));
        console.warn(`Use ${chalk_1.default.green('jss deploy config')} or copy /sitecore/config/*.config manually to Sitecore's /App_Config/Include`);
        const continueCommand = readline_sync_1.default.keyInYN(chalk_1.default.yellow('Is the config deployed?'));
        if (!continueCommand) {
            throw 'Retry this command after deploying your JSS app config to Sitecore.';
        }
    }
};
exports.verifySetup = verifySetup;
