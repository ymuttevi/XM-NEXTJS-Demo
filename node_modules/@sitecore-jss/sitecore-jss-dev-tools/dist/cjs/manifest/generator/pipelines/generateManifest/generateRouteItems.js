"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const index_1 = require("./../../../../index");
const generateRouteItems = (routes, components, pipelines) => __awaiter(void 0, void 0, void 0, function* () {
    const result = [];
    const pipeline = Object.assign({}, pipelines.generateRouteItem);
    const pipelineArgs = Object.assign(Object.assign({}, pipeline.args), { components,
        pipelines });
    pipeline.args = pipelineArgs;
    for (const route of routes) {
        pipeline.args.route = route;
        // eslint-disable-next-line no-await-in-loop
        const pipelineResult = yield index_1.runPipeline(pipeline);
        result.push(pipelineResult.item);
    }
    return result;
});
exports.default = (args) => __awaiter(void 0, void 0, void 0, function* () {
    const { routes, components, pipelines } = args;
    const routeItems = yield generateRouteItems(routes, components, pipelines);
    return Object.assign(Object.assign({}, args), { pipelineResult: Object.assign(Object.assign({}, args.pipelineResult), { items: Object.assign(Object.assign({}, args.pipelineResult.items), { routes: [...args.pipelineResult.items.routes, ...routeItems] }) }) });
});
