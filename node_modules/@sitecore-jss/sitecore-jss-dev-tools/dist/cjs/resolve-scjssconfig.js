"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolveScJssConfig = void 0;
const resolve_1 = __importDefault(require("resolve"));
/**
 * @param {any} config
 */
function resolveScJssConfig({ configPath = './scjssconfig.json', configName = 'sitecore', assert = true, } = {}) {
    return new Promise((resolvePromise, rejectPromise) => {
        resolve_1.default(configPath, { basedir: process.cwd() }, (error, jssConfigJson) => {
            if (error) {
                if (assert) {
                    console.error('The scjssconfig.json file was missing, and is required. Please set up your connection with `jss setup` and try again.');
                }
                rejectPromise();
            }
            else {
                const json = require(jssConfigJson);
                if (!json[configName]) {
                    console.error(`The scjssconfig.json did not contain the ${configName} configuration.`);
                    rejectPromise();
                }
                resolvePromise({
                    sitecore: json[configName],
                });
            }
        });
    });
}
exports.resolveScJssConfig = resolveScJssConfig;
