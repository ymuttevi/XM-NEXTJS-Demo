import { ManifestInstance } from './generator/manifest.types';
import { FSWatcher } from 'chokidar';
export interface ManifestManagerOptions {
    rootPath?: string;
    sourceFiles?: string[];
    watchOnlySourceFiles?: string[];
    requireArg?: string | null;
    outputPath?: string;
    pipelinePatchFiles?: string[];
    appName?: string;
}
export declare class ManifestManager {
    initialManifest: boolean;
    rootPath: string;
    watcher?: FSWatcher;
    watcherSourcePaths: string[];
    manifestArgs: any;
    constructor({ rootPath, sourceFiles, watchOnlySourceFiles, requireArg, outputPath, pipelinePatchFiles, appName, }: ManifestManagerOptions);
    setManifestUpdatedCallback(callback: (newManifest: ManifestInstance) => void): void;
    getManifestPath(): string;
    getManifest(language: string): Promise<ManifestInstance>;
}
