import { ExecutablePipeline } from './../../../../index';
import { ComponentDefinition, GeneratePipelineArgs, ItemDefinition, TemplateDefinition } from '../../manifest.types';
declare const _default: (args: GeneratePipelineArgs) => Promise<{
    pipelineResult: {
        items: {
            nonRoutes: any[];
            routes: import("../../manifest.types").RouteDefinition[];
        };
        appName: string;
        templates: TemplateDefinition[];
        placeholders: import("../../manifest.types").PlaceholderDefinition[];
        media?: any[] | undefined;
        dictionary: import("../../manifest.types").DictionaryDefinition[];
        language: string;
        wipeExisting: boolean;
        rootPlaceholders: string[];
    };
    debug: boolean;
    skipPlaceholderBlacklist: boolean;
    components: ComponentDefinition[];
    routes: import("../../manifest.types").RouteDefinition[];
    content: ItemDefinition[];
    dictionary: import("../../manifest.types").DictionaryDefinition[];
    templates: TemplateDefinition[];
    placeholders: import("../../manifest.types").PlaceholderDefinition[];
    appName: string;
    language: string;
    pipelines: {
        [key: string]: ExecutablePipeline;
    };
}>;
export default _default;
