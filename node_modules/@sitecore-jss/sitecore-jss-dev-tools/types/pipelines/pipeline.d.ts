import { ExecutablePipeline, Processor } from './pipelineFactory';
/**
 * @param {Object} args
 * @param {Processor[]} args.processors the processors to run (optional but must be specified if pipeline is not specified)
 * @param {any} args.pipelineArgs arguments to pass to the pipeline processors
 */
export declare const runProcessors: ({ processors, pipelineArgs, }: {
    processors: Processor[];
    pipelineArgs: any;
}) => Promise<any>;
/**
 * @param {ExecutablePipeline} pipeline the pipeline to run (optional but must be specified if processors is not specified)
 */
export declare const run: (pipeline: ExecutablePipeline) => Promise<any>;
/**
 * Run a pipeline, loading specified compilers first
 * @param {any} compilers
 * @returns {any} pipeline result
 */
export declare const runWithCompilers: (compilers: any) => (pipeline: any) => Promise<any>;
