"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = exports.builder = exports.describe = exports.command = void 0;
const chalk_1 = __importDefault(require("chalk"));
const getDeprecationMessage = (argv = {}) => [
    chalk_1.default.red('**DEPRECATED**'),
    'jss create is not supported from JSS CLI version 20.0.0.',
    // TODO: add (link to docs: https://doc.sitecore.net/<officialLink> ) when article will be created
    'Please use npm init sitecore-jss instead. For example:',
    chalk_1.default.green(`npm init sitecore-jss ${(argv === null || argv === void 0 ? void 0 : argv.template) || 'nextjs'}`),
    'Please downgrade to a previous JSS CLI version if you want to install older releases. For example:',
    chalk_1.default.green('npm install -g @sitecore-jss/sitecore-jss-cli@19.0.0'),
    chalk_1.default.green(`jss create ${(argv === null || argv === void 0 ? void 0 : argv.name) || 'nextjs-app'} ${(argv === null || argv === void 0 ? void 0 : argv.template) ||
        'nextjs'} --branch release/19.0.0`),
].join('\n');
exports.command = 'create <name> <template>';
exports.describe = getDeprecationMessage();
exports.builder = {};
/**
 * Handle `jss create` command
 * @param {Object} argv cli arguments
 */
function handler(argv) {
    console.log(getDeprecationMessage(argv));
}
exports.handler = handler;
