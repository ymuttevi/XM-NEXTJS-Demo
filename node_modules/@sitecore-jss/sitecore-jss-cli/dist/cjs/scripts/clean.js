"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = exports.builder = exports.describe = exports.command = void 0;
/* eslint-disable prettier/prettier */
const sitecore_jss_dev_tools_1 = require("@sitecore-jss/sitecore-jss-dev-tools");
const resolve_package_1 = __importDefault(require("../resolve-package"));
exports.command = 'clean';
exports.describe = 'Cleans the contents of a directory, by default the buildArtifactsPath.';
exports.builder = {
    path: {
        requiresArgs: false,
        type: 'string',
        describe: 'The path to clean. Defaults to buildArtifactsPath config in package.json',
    },
};
/**
 * @param {any} argv
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function handler(argv) {
    return __awaiter(this, void 0, void 0, function* () {
        const packageJson = yield resolve_package_1.default();
        if (!argv.path) {
            argv.path = packageJson.config.buildArtifactsPath;
        }
        if (!argv.path) {
            console.error('Path argument was not specified and no \'buildArtifactsPath\' in package.json.');
            process.exit(1);
        }
        if (argv.path.length === 0) {
            console.error('Clean was requested with a blank path argument. This would delete cwd; aborting.');
            process.exit(1);
        }
        sitecore_jss_dev_tools_1.clean({ path: argv.path });
    });
}
exports.handler = handler;
