var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { builder as packageBuilder } from './package';
export const command = 'package';
export const describe = null;
export const builder = Object.assign({ deployUrl: {
        requiresArg: false,
        type: 'string',
    }, skipPackage: {
        requiresArgs: false,
        type: 'boolean',
        default: false,
    } }, packageBuilder);
/**
 * Deploy package handler
 */
export function handler() {
    return __awaiter(this, void 0, void 0, function* () {
        console.error('jss deploy package is no longer used. Use jss deploy app instead.');
        process.exit(1);
    });
}
