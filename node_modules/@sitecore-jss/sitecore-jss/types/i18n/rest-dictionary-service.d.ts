import { HttpDataFetcher } from '../data-fetcher';
import { DictionaryPhrases, DictionaryServiceBase } from './dictionary-service';
import { CacheOptions } from '../cache-client';
/**
 * A reply from the REST Sitecore Dictionary Service
 */
export declare type RestDictionaryServiceData = {
    phrases: DictionaryPhrases;
};
export declare type RestDictionaryServiceConfig = CacheOptions & {
    /**
     * Your Sitecore instance hostname that is the backend for JSS
     */
    apiHost: string;
    /**
     * The Sitecore SSC API key your app uses
     */
    apiKey: string;
    /**
     * The JSS application name
     */
    siteName: string;
    /**
     * Custom data fetcher
     * @see HttpDataFetcher<T>
     */
    dataFetcher?: HttpDataFetcher<RestDictionaryServiceData>;
};
/**
 * Fetch dictionary data using the Sitecore Dictionary Service REST API.
 * Uses Axios as the default data fetcher (@see AxiosDataFetcher).
 * @augments DictionaryServiceBase
 */
export declare class RestDictionaryService extends DictionaryServiceBase {
    options: RestDictionaryServiceConfig;
    /**
     * Provides default @see AxiosDataFetcher data fetcher
     */
    get defaultFetcher(): HttpDataFetcher<RestDictionaryServiceData>;
    constructor(options: RestDictionaryServiceConfig);
    /**
     * Fetch dictionary data for a language.
     * @param {string} language the language to be used to fetch the dictionary
     * @returns {Promise<DictionaryPhrases>} dictionary phrases
     */
    fetchDictionaryData(language: string): Promise<DictionaryPhrases>;
    /**
     * Generate dictionary service url
     * @param {string} language the language to be used to fetch the dictionary
     * @returns {string} dictionary service url
     */
    protected getUrl(language: string): string;
}
