import { GraphQLClient } from '../graphql';
export declare type GraphQLErrorPagesServiceConfig = {
    /**
     * Your Graphql endpoint
     */
    endpoint: string;
    /**
     * The API key to use for authentication
     */
    apiKey: string;
    /**
     * The JSS application name
     */
    siteName: string;
    /**
     * The language
     */
    language: string;
};
/**
 * Object model of Error Pages result
 */
export declare type ErrorPages = {
    notFoundPagePath: string;
    serverErrorPagePath: string;
};
/**
 * Service that fetch the error pages data using Sitecore's GraphQL API.
 */
export declare class GraphQLErrorPagesService {
    options: GraphQLErrorPagesServiceConfig;
    private graphQLClient;
    protected get query(): string;
    /**
     * Creates an instance of graphQL error pages service with the provided options
     * @param {GraphQLErrorPagesServiceConfig} options instance
     */
    constructor(options: GraphQLErrorPagesServiceConfig);
    /**
     * Fetch list of error pages for the site
     * @returns {ErrorPages} list of url's error pages
     * @throws {Error} if the siteName is empty.
     */
    fetchErrorPages(): Promise<ErrorPages | null>;
    /**
     * Gets a GraphQL client that can make requests to the API. Uses graphql-request as the default
     * library for fetching graphql data (@see GraphQLRequestClient). Override this method if you
     * want to use something else.
     * @returns {GraphQLClient} implementation
     */
    protected getGraphQLClient(): GraphQLClient;
}
