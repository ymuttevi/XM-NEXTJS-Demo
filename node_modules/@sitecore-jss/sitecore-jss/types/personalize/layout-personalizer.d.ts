import { LayoutServiceData, ComponentRendering, HtmlElementRendering } from './../layout/models';
export declare type ComponentRenderingWithExperiences = ComponentRendering & {
    experiences: {
        [name: string]: ComponentRenderingWithExperiences;
    };
};
/**
 * Apply personalization to layout data. This will recursively go through all placeholders/components, check experiences nodes and replace default with object from specific experience.
 * @param {LayoutServiceData} layout Layout data
 * @param {string} variantId variant id
 */
export declare function personalizeLayout(layout: LayoutServiceData, variantId: string): void;
/**

 * @param {Array} components components within placeholder
 * @param {string} variantId variant id
 * @returns {Array<ComponentRendering | HtmlElementRendering>} components with personalization applied
 */
export declare function personalizePlaceholder(components: Array<ComponentRendering | HtmlElementRendering>, variantId: string): Array<ComponentRendering | HtmlElementRendering>;
/**
 * @param {ComponentRenderingWithExperiences} component component with experiences
 * @param {string} variantId variant id
 * @returns {ComponentRendering | null} component with personalization applied or null if hidden
 */
export declare function personalizeComponent(component: ComponentRenderingWithExperiences, variantId: string): ComponentRendering | null;
