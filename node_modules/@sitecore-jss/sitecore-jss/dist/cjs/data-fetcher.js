"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fetchData = exports.checkStatus = exports.ResponseError = void 0;
const utils_1 = require("./utils/utils");
class ResponseError extends Error {
    constructor(message, response) {
        super(message);
        Object.setPrototypeOf(this, ResponseError.prototype);
        this.response = response;
    }
}
exports.ResponseError = ResponseError;
/**
 * @param {HttpResponse<T>} response the response to check
 * @throws {ResponseError} if response code is not ok
 */
function checkStatus(response) {
    if (response.status >= 200 && response.status < 300) {
        return response;
    }
    const error = new ResponseError(response.statusText, response);
    throw error;
}
exports.checkStatus = checkStatus;
/**
 * @param {string} url the URL to request; may include query string
 * @param {HttpDataFetcher} fetcher the fetcher to use to perform the request
 * @param {ParsedUrlQueryInput} params the query string parameters to send with the request
 */
function fetchData(url, fetcher, params = {}) {
    return fetcher(utils_1.resolveUrl(url, params))
        .then(checkStatus)
        .then((response) => {
        // axios auto-parses JSON responses, don't need to JSON.parse
        return response.data;
    });
}
exports.fetchData = fetchData;
